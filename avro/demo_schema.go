// Code generated by github.com/actgardner/gogen-avro/v7. DO NOT EDIT.
/*
 * SOURCE:
 *     schema.avsc
 */
package avro

import (
	"github.com/actgardner/gogen-avro/v7/compiler"
	"github.com/actgardner/gogen-avro/v7/vm"
	"github.com/actgardner/gogen-avro/v7/vm/types"
	"io"
)

type DemoSchema struct {
	Data []*UnionFooBar `json:"data"`
}

const DemoSchemaAvroCRC64Fingerprint = "mE\xa9i$\x9cAn"

func NewDemoSchema() *DemoSchema {
	return &DemoSchema{}
}

func DeserializeDemoSchema(r io.Reader) (*DemoSchema, error) {
	t := NewDemoSchema()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func DeserializeDemoSchemaFromSchema(r io.Reader, schema string) (*DemoSchema, error) {
	t := NewDemoSchema()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func writeDemoSchema(r *DemoSchema, w io.Writer) error {
	var err error
	err = writeArrayUnionFooBar(r.Data, w)
	if err != nil {
		return err
	}
	return err
}

func (r *DemoSchema) Serialize(w io.Writer) error {
	return writeDemoSchema(r, w)
}

func (r *DemoSchema) Schema() string {
	return "{\"fields\":[{\"name\":\"data\",\"type\":{\"items\":[{\"fields\":[{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"foo\",\"type\":\"record\"},{\"fields\":[{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"bar\",\"type\":\"record\"}],\"type\":\"array\"}}],\"name\":\"DemoSchema\",\"type\":\"record\"}"
}

func (r *DemoSchema) SchemaName() string {
	return "DemoSchema"
}

func (_ *DemoSchema) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ *DemoSchema) SetInt(v int32)       { panic("Unsupported operation") }
func (_ *DemoSchema) SetLong(v int64)      { panic("Unsupported operation") }
func (_ *DemoSchema) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ *DemoSchema) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ *DemoSchema) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ *DemoSchema) SetString(v string)   { panic("Unsupported operation") }
func (_ *DemoSchema) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *DemoSchema) Get(i int) types.Field {
	switch i {
	case 0:
		r.Data = make([]*UnionFooBar, 0)

		return &ArrayUnionFooBarWrapper{Target: &r.Data}
	}
	panic("Unknown field index")
}

func (r *DemoSchema) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *DemoSchema) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ *DemoSchema) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *DemoSchema) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ *DemoSchema) Finalize()                        {}

func (_ *DemoSchema) AvroCRC64Fingerprint() []byte {
	return []byte(DemoSchemaAvroCRC64Fingerprint)
}
